- name: dry-run-vanilla
  tags:
    - dry-run
  command: >
    snakemake
      --dryrun
      --reason
      --printshellcmds
      --config pepfile=tests/pep/project_config.yml
      --snakefile Snakefile
  exit_code: 0
  stdout:
    contains:
      # Test whether the input bamfile is converted to fasta
      - samtools fasta $bamfile 2>> log/GM24385_bam_to_fasta.txt | gzip >> GM24385/input/GM24385.fasta.gz
      # Test whether we plan to convert the GFA graph to fasta
      - bp.r_utg.fasta
      # Test whether we plan to map the contigs to the reference
      - minimap2 -a tests/data/reference/ASL.fasta GM24385/assembly/GM24385.bp.r_utg.fasta
      # Test whether we plan to run blast
      - GM24385/blast/GM24385_contigs_blast.json
      # Test whether we plan to create a blast database
      - GM24385/blast/GM24385.blastdb.nhr
      # Test whether we plan to run blast
      - GM24385/blast/GM24385_blast.xml
    contains_regex:
      # Test whether the input is a single bamfile
      - 'input: tests/data/GM24385_ASL.bam$'
      # Test whether hifiasm-flags are included in the command
      - 'hifiasm -o GM24385/assembly/GM24385 .* -f0'
    must_not_contain:
      - rror
    must_not_contain_regex:
      # Make sure --write-ec is not specified by default
      - 'hifiasm .* --write-ec'
      # Make sure the error correcte fasta file is not expected by default
      - 'output: .* GM24385/assembly/GM24385.ec.fa'
  stderr:
    must_not_contain:
      - rror

- name: dry-run-two-bamfiles
  tags:
    - dry-run
  command: >
    snakemake
      --dryrun
      --reason
      --printshellcmds
      --config pepfile=tests/pep/project_config_two_bamfiles.yml
      --snakefile Snakefile
  exit_code: 0
  stdout:
    contains_regex:
      # Test whether the input are two bamfiles
      - 'input: tests/data/GM24385_ASL.bam, tests/data/GM24385_CYP2D6-CYP2D7.bam$'
    must_not_contain:
      - rror
  stderr:
    must_not_contain:
      - rror

# Minimal configuration file, only runs HiFiasm
- name: dry-run-minimal
  tags:
    - dry-run
  command: >
    snakemake
      --dryrun
      --reason
      --printshellcmds
      --config pepfile=tests/pep/project_config_minimal.yml
      --snakefile Snakefile
  exit_code: 0
  stdout:
    must_not_contain:
      - rule map_contigs
      - rule parse_blast_results
      - rror
  stderr:
    must_not_contain:
      - rror

# Configuration file with only reference specified
- name: dry-run-reference-only
  tags:
    - dry-run
  command: >
    snakemake
      --dryrun
      --reason
      --printshellcmds
      --config pepfile=tests/pep/project_config_reference_only.yml
      --snakefile Snakefile
  exit_code: 0
  stdout:
    contains:
      - rule map_contigs
    must_not_contain:
      - rror
      - rule parse_blast_results
  stderr:
    must_not_contain:
      - rror

# Configuration file with only genes specified
- name: dry-run-genes-only
  tags:
    - dry-run
  command: >
    snakemake
      --dryrun
      --reason
      --printshellcmds
      --config pepfile=tests/pep/project_config_genes_only.yml
      --snakefile Snakefile
  exit_code: 0
  stdout:
    contains:
      - rule parse_blast_results
    must_not_contain:
      - rror
      - rule map_contigs
  stderr:
    must_not_contain:
      - rror

# Configuration file where we use the p_utg output from HiFiasm
- name: dry-run-p_utg
  tags:
    - dry-run
  command: >
    snakemake
      --dryrun
      --reason
      --printshellcmds
      --config pepfile=tests/pep/project_config_p_utg.yml
      --snakefile Snakefile
  exit_code: 0
  stdout:
    contains_regex:
      # Test if the p_utg GFA file is used to create the fasta file
      - 'input: GM24385/assembly/GM24385.bp.p_utg.gfa, .*gfa-to-fasta.py'
    must_not_contain:
      - rror
  stderr:
    must_not_contain:
      - rror

# Configuration file where we use the p_ctg output from HiFiasm
- name: dry-run-p_ctg
  tags:
    - dry-run
  command: >
    snakemake
      --dryrun
      --reason
      --printshellcmds
      --config pepfile=tests/pep/project_config_p_ctg.yml
      --snakefile Snakefile
  exit_code: 0
  stdout:
    contains_regex:
      # Test if the p_utg GFA file is used to create the fasta file
      - 'input: GM24385/assembly/GM24385.bp.p_ctg.gfa, .*gfa-to-fasta.py'
    must_not_contain:
      - rror
  stderr:
    must_not_contain:
      - rror

# Configuration file where we use the a_ctg output from HiFiasm
- name: dry-run-a_ctg
  tags:
    - dry-run
  command: >
    snakemake
      --dryrun
      --reason
      --printshellcmds
      --config pepfile=tests/pep/project_config_a_ctg.yml
      --snakefile Snakefile
  exit_code: 0
  stdout:
    contains_regex:
      # Test if the p_utg GFA file is used to create the fasta file
      - 'input: GM24385/assembly/GM24385.bp.a_ctg.gfa, .*gfa-to-fasta.py'

# Configuration file where we specified `hifiasm-write-ec`
- name: dry-run-write-ec
  tags:
    - dry-run
  command: >
    snakemake
      --dryrun
      --reason
      --printshellcmds
      --config pepfile=tests/pep/project_config_write_ec.yml
      --snakefile Snakefile
  exit_code: 0
  stdout:
    contains_regex:
      # Test if --write-ec was passed to hifiasm
      - 'hifiasm .* --write-ec'
      # Make sure the error correcte fasta file is part of the rule output
      - 'output: .* GM24385/assembly/GM24385.ec.fa'
    must_not_contain_regex:
      - rror
      # Fix a bug where params are passed to hifiasm multiple times
      - 'hifiasm .* --write-ec.* --write-ec'
      # Do not generate a bam file when no reference was specified
      - GM24385/bamfile/GM24385.ec.bam
  stderr:
    must_not_contain:
      - rror

# Configuration file where we specified `hifiasm-write-ec` AND `reference`
- name: dry-run-write-ec-reference
  tags:
    - dry-run
  command: >
    snakemake
      --dryrun
      --reason
      --printshellcmds
      --config pepfile=tests/pep/project_config_write_ec_reference.yml
      --snakefile Snakefile
  exit_code: 0
  stdout:
    contains_regex:
      # Test if --write-ec was passed to hifiasm
      - 'hifiasm .* --write-ec'
      # Make sure the error correcte fasta file was mapped to the reference
      - 'output: .* GM24385/bamfile/GM24385.ec.bam'
      # And also that the unmapped reads were written to a different file
      - 'output: .* GM24385/bamfile/GM24385.ec.unmapped.bam?'
    must_not_contain:
      - rror
      - GM24385/bamfile/GM24385_ec_reads.bam
  stderr:
    must_not_contain:
      - rror
